@use 'sass:color';
@use 'sass:map';
@use '@/styles/main.scss' as *;

aside {
  display: flex;
  flex-direction: column;
  width: $sidebar-width; // Ancho por defecto (colapsado)
  min-height: 100dvh;
  padding: map.get($spacers, 2) map.get($spacers, 1);
  background: $white;
  box-shadow: 4px 0 12px rgba(0, 0, 0, 0.05);
  transition: width $transition, transform $transition;
  position: fixed; // Fixed para que no haga scroll con el contenido
  z-index: 1000;
  overflow: hidden; // Para ocultar el texto de los ítems cuando está colapsado

  .logo {
    opacity: 0; // Oculto por defecto
    padding: 0 map.get($spacers, 1);
    margin-bottom: map.get($spacers, 3);
    @include flex-center;
    transition: opacity $transition; // Transición para la visibilidad del logo

    img {
      max-width: 2.5rem;
    }
  }

  &.is-open {
    width: $expanded-sidebar-width; // Ancho expandido

    .menu .item .text,
    footer.footer button .text {
      opacity: 1;
      transition-delay: 0.1s;
    }

    .logo {
      opacity: 1;
    }
  }

  .toggle {
    position: absolute; // Posición absoluta para el botón de toggle
    top: map.get($spacers, 2);
    left: map.get($spacers, 2); // Por defecto a la izquierda para desktop
    background: $white;
    border-radius: 50%;
    padding: map.get($spacers, 1);
    @include box-shadow(1);
    transition: $transition;
    z-index: 1001; // Asegura que esté por encima del overlay

    &:hover {
      background: rgba($primary, 0.1);
      transform: scale(1.05);
    }

    .material-icons {
      color: $primary;
      transition: transform $transition;
    }

    // El botón de toggle en móvil se queda a la derecha del sidebar colapsado.
    // Esto es vital: si el sidebar está colapsado, el botón debe estar a su derecha.
    @media (max-width: map.get($breakpoints, tablet)) {
      left: auto; // Restablecemos la posición de la izquierda
      right: map.get(
        $spacers,
        2
      ); // Posicionamos a la derecha para que quede fijo.
      z-index: 1002; // Mayor z-index para que sea siempre clickeable
    }
  }

  .menu {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: map.get($spacers, 1);
    padding: 0 map.get($spacers, 1);

    .item {
      position: relative;
      display: flex;
      align-items: center;
      padding: map.get($spacers, 2);
      border-radius: $btn-border-radius;
      color: $gray-600;
      transition: $transition;
      list-style: none;
      text-decoration: none;

      &:hover {
        background: rgba($primary, 0.08);
      }

      &.active {
        background: rgba($primary, 0.12);
        color: $primary;
        font-weight: 600;

        &::before {
          content: '';
          position: absolute;
          left: 0;
          top: 50%;
          transform: translateY(-50%);
          height: 50%;
          width: 3px;
          background: $primary;
          border-radius: 0 4px 4px 0;
        }
      }

      .material-icons {
        font-size: 1.5rem;
        margin-right: map.get($spacers, 2);
      }

      .text {
        opacity: 0; // Oculto por defecto
        transition: opacity 0.2s ease;
        white-space: nowrap;
      }

      .badge {
        position: absolute;
        right: map.get($spacers, 2);
        background: $error;
        color: $white;
        min-width: 1.25rem;
        height: 1.25rem;
        border-radius: 0.625rem;
        @include flex-center;
        font-size: 0.75rem;
      }
    }
  }

  footer.footer {
    margin-top: auto;
    border-top: 1px solid $gray-200;
    padding: map.get($spacers, 2) map.get($spacers, 1);

    button {
      display: flex;
      align-items: center;
      width: 100%;
      padding: map.get($spacers, 2);
      border: none;
      background: none;
      cursor: pointer;
      color: $gray-600;
      transition: $transition;
      border-radius: $btn-border-radius;

      &:hover:not([disabled]) {
        background: rgba($primary, 0.08);
      }

      &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
      }

      .material-icons {
        font-size: 1.5rem;
        margin-right: map.get($spacers, 2);
      }
      .text {
        opacity: 0;
        transition: opacity 0.2s ease;
        white-space: nowrap;
      }
    }
  }

  // Comportamiento para dispositivos móviles (is-mobile)
  &.is-mobile {
    // Cuando es móvil, el sidebar siempre tiene el ancho colapsado por defecto.
    width: $sidebar-width;
    // Eliminamos el translateX(-100%) por defecto, el sidebar siempre estará visible.
    transform: translateX(0);
    z-index: 1000; // Asegura que esté por encima del contenido principal

    // Solo se "transforma" cuando se expande
    &.is-open {
      transform: translateX(0); // Asegura que esté visible
      width: $expanded-sidebar-width; // Se expande
      box-shadow: 8px 0 24px rgba(0, 0, 0, 0.15); // Añade sombra al expandir
    }

    // En móvil, cuando está expandido, se muestran los textos
    &.is-open {
      .menu .item .text,
      footer.footer button .text {
        opacity: 1;
        transition-delay: 0.1s;
      }
    }

    // En móvil, cuando está colapsado (no .is-open), los textos están ocultos
    &:not(.is-open) {
      .menu .item .text,
      footer.footer button .text {
        opacity: 0;
      }
    }

    // En móvil, el logo también permanece oculto a menos que el sidebar esté expandido
    &:not(.is-open) .logo {
      opacity: 0;
    }
    &.is-open .logo {
      opacity: 1;
    }
  }

  // Media queries para ajustes finos si es necesario, pero el is-mobile ya maneja mucho.
  @media (max-width: map.get($breakpoints, tablet)) {
    // Si el main tiene que ocupar todo el ancho cuando el sidebar está colapsado,
    // esto se maneja en AppShell.scss. Aquí solo nos ocupamos del sidebar.
  }
}

// Estilos del overlay, solo para cuando el sidebar móvil esté abierto
// (en este caso, 'expanded' o 'is-open' en móvil).
.app-shell .overlay {
  display: none;
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.4);
  z-index: 900;
  transition: opacity $transition;
  opacity: 0;

  // El overlay solo se muestra cuando el sidebar móvil está abierto y es móvil
  .app-shell.sidebar-open & {
    @media (max-width: map.get($breakpoints, tablet)) {
      display: block;
      opacity: 1;
    }
  }
}

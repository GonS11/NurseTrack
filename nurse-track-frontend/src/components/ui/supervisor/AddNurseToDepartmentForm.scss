@use 'sass:color';
@use 'sass:map';
@use '../../../styles/main.scss' as *;

.add-nurse-form {
  margin-top: map.get($spacers, 5); // Corresponds to $spacing-xl
  padding: map.get($spacers, 4); // Corresponds to $spacing-lg
  border: 1px solid $gray-300; // Use light gray border
  border-radius: $border-radius;
  background-color: $white; // Use white for form background
  box-shadow: $card-shadow-sm; // Use small card shadow

  .form-group {
    margin-bottom: map.get($spacers, 3); // Corresponds to $spacing-md

    label {
      display: block;
      margin-bottom: map.get($spacers, 1); // Corresponds to $spacing-xs
      font-weight: 600;
      color: $text-primary;
    }

    select {
      width: 100%;
      padding: map.get($spacers, 2); // Corresponds to $spacing-sm
      border: 1px solid $gray-300;
      border-radius: $btn-border-radius; // Use button border-radius
      background-color: $gray-100; // Use light gray background
      color: $text-primary;
      font-size: $font-size-base;
      transition: $transition; // Apply global transition

      &:focus {
        border-color: $primary;
        outline: none;
        box-shadow: 0 0 0 3px $input-focus-glow;
      }
    }
  }

  .add-nurse-btn {
    // Changed from button[type='submit'] for clearer styling hook
    @include button-primary; // Use the primary button mixin
    margin-top: map.get($spacers, 3); // Add some margin above the button
    padding: $btn-padding-y $btn-padding-x; // Ensure button padding from mixin
    font-size: 1rem;
    gap: map.get($spacers, 1); // Corresponds to $spacing-xs for icon gap

    .material-icons {
      font-size: 1.2rem;
    }
  }

  .error-message,
  .success-message {
    margin-top: map.get($spacers, 3); // Corresponds to $spacing-md
    padding: map.get($spacers, 2); // Corresponds to $spacing-sm
    border-radius: $btn-border-radius; // Use button border-radius for message consistency
    font-size: $font-size-base * 0.9;
    text-align: center;
  }

  .error-message {
    background-color: $error-bg; // Use specific error background
    color: $error-text; // Use specific error text
    border: 1px solid $error; // Use base error color for border
  }

  .success-message {
    background-color: $success-bg; // Use specific success background
    color: $success-text; // Use specific success text
    border: 1px solid $success; // Use base success color for border
  }

  .loading-spinner {
    display: inline-block;
    width: 1em;
    height: 1em;
    border: 2px solid rgba($white, 0.3); // Use $white for spinner
    border-radius: 50%;
    border-top-color: $white; // Use $white for spinner top color
    animation: spin 1s ease-in-out infinite;
    -webkit-animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to {
      -webkit-transform: rotate(360deg);
    }
  }
  @-webkit-keyframes spin {
    to {
      -webkit-transform: rotate(360deg);
    }
  }
}

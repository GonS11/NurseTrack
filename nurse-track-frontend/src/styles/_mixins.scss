@use 'variables' as *;

@mixin flex-center($dir: row) {
  display: flex;
  flex-direction: $dir;
  justify-content: center;
  align-items: center;
}

@mixin box-shadow($lvl: 1) {
  @if $lvl == 1 {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  } @else if $lvl == 2 {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
  }
}

@mixin responsive($bp) {
  @if $bp == phone {
    @media (max-width: $breakpoint-phone) {
      @content;
    }
  } @else if $bp == tablet {
    @media (max-width: $breakpoint-tablet) {
      @content;
    }
  } @else if $bp == desktop {
    @media (max-width: $breakpoint-desktop) {
      @content;
    }
  }
}

@mixin button-base {
  padding: $btn-padding-y $btn-padding-x;
  border-radius: $btn-border-radius;
  font-weight: 600;
  transition: $transition;
  cursor: pointer;
  border: none;
  font-size: $font-size-base;
}

@mixin button-primary {
  @include button-base;
  background: $primary;
  color: $white;

  &:hover {
    background: $primary-hover;
  }

  &:disabled {
    background: $gray-400;
    cursor: not-allowed;
  }
}

@mixin button-secondary {
  @include button-base;
  background: $gray-200;
  color: $gray-700;

  &:hover {
    background: $gray-300;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-danger {
  @include button-base;
  background: $error;
  color: $white;

  &:hover {
    background: #c02c28;
  }

  &:disabled {
    background: $gray-400;
    cursor: not-allowed;
  }
}

@mixin button-outline {
  @include button-base;
  background: $white;
  border: 1px solid $gray-300;
  color: $gray-700;
  font-weight: 500;

  &:hover {
    background: $gray-100;
    border-color: $primary;
    color: $primary;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-action-icon {
  @include flex-center;
  padding: $spacer-2;
  border-radius: $btn-border-radius;
  color: $gray-600;
  transition: $transition;
  background: none;
  border: none;
  cursor: pointer;

  &:hover {
    background: rgba($primary, 0.1);
    color: $primary;
  }

  &.danger {
    color: $error;
    &:hover {
      background: rgba($error, 0.1);
    }
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: none !important;
  }
}

@mixin button-sidebar-footer-icon {
  @include flex-center;
  padding: $spacer-2;
  border-radius: $btn-border-radius;
  background: none;
  border: none;
  color: $gray-600;
  font-weight: 500;
  transition: $transition;
  cursor: pointer;

  &:hover:not([disabled]) {
    background: rgba($primary, 0.08);
    color: $primary;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: none;
  }

  .material-icons {
    font-size: 1.5rem;
    margin-right: $spacer-2;
  }

  .text {
    opacity: 0;
    transition: opacity 0.2s ease;
    white-space: nowrap;
  }
}

@mixin grid-layout($cols: 1, $gap: 1, $tablet-cols: null, $phone-cols: null) {
  display: grid;
  grid-template-columns: repeat($cols, 1fr);
  gap: $spacer * $gap;

  @include responsive(phone) {
    grid-template-columns: repeat(1, 1fr);
  }

  @include responsive(tablet) {
    @if $tablet-cols {
      grid-template-columns: repeat($tablet-cols, 1fr);
    } @else if $cols > 1 {
      grid-template-columns: repeat(2, 1fr);
    } @else {
      grid-template-columns: repeat($cols, 1fr);
    }
  }
}

@use '../../styles/main.scss' as *;

.notifications-container {
  background: $white;
  border-radius: $border-radius;
  margin: $spacer-4 auto;
  padding: $spacer-4;
}

.notifications-header {
  @include flex-center(row);
  justify-content: space-between;
  margin-bottom: $spacer-4;
  padding-bottom: $spacer-3;
  border-bottom: 2px solid $gray-200;

  h1 {
    @include flex-center(row);
    gap: $spacer-3;
    font-size: $font-size-h4;
    color: $text-primary;
  }

  .badge {
    background: $primary;
    color: $white;
    padding: $spacer-1 $spacer-2;
    border-radius: $border-radius;
    font-size: $font-size-sm;
  }

  .mark-all-read {
    @include button-base;
    background: $gray-300;
    color: $black;
    padding: $btn-padding-y $btn-padding-x;
    border-radius: $btn-border-radius;

    &:hover:not(:disabled) {
      background: $gray-400;
    }

    &:disabled {
      opacity: 0.5;
      cursor: default;
    }
  }
}

.loading-spinner {
  @include flex-center;
  padding: $spacer-5;

  .spin {
    animation: spin 1s linear infinite;
    font-size: 2rem;
    color: $primary;
  }
}

.empty-state {
  @include flex-center(column);
  gap: $spacer-3;
  padding: $spacer-5;
  text-align: center;
  color: $gray-600;

  .material-icons {
    font-size: 3rem;
    opacity: 0.5;
  }
}

.notifications-list {
  background: $gray-100;
  border-radius: $border-radius-sm;
  @include box-shadow(1);
}

.notification-item {
  @include flex-center(row);
  gap: $spacer-3;
  padding: $spacer-4;
  border-bottom: 1px solid $gray-100;
  transition: $transition;

  &:last-child {
    border-bottom: none;
  }

  &:hover {
    background: $gray-100;
  }

  &.unread {
    background: rgba($primary, 0.05);
    border-left: 4px solid $primary;
  }
}

.notification-icon {
  @include flex-center;
  background: rgba($primary, 0.1);
  width: $spacer-5;
  height: $spacer-5;
  border-radius: 50%;

  .material-icons {
    color: $primary;
  }
}

.notification-content {
  flex: 1;

  h3 {
    color: $text-primary;
    margin-bottom: $spacer-1;
    font-size: $font-size-md;
  }

  p {
    color: $gray-600;
    margin-bottom: $spacer-1;
    font-size: $font-size-sm;
  }

  time {
    font-size: $font-size-xs;
    color: $gray-500;
  }
}

.notification-actions {
  @include flex-center(row);
  gap: $spacer-2;
  opacity: 0;
  transition: $transition;

  .notification-item:hover & {
    opacity: 1;
  }

  button {
    @include button-action-icon;
    border-radius: 50%;
    padding: $spacer-2;

    &.mark-read {
      color: $gray-600;
      &:hover {
        background: rgba($primary, 0.1);
        color: $primary;
      }
    }

    &.delete {
      @extend .danger;
      color: $error;
      &:hover {
        background: rgba($error, 0.1);
      }
    }
  }
}

.pagination-controls {
  @include flex-center(row);
  gap: $spacer-3;
  margin-top: $spacer-4;
  padding: $spacer-3;
  background: $gray-100;
  border-radius: $border-radius-sm;
  @include box-shadow(1);

  button {
    @include button-base;
    background: $gray-400;
    color: $black;

    &:disabled {
      opacity: 0.5;
      cursor: default;
    }

    &:hover:not(:disabled) {
      background: $gray-700;
    }
  }

  span {
    font-size: $font-size-md;
    color: $black;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
